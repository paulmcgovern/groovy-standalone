<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="9" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="GroovyExamplee" duration-ms="329" started-at="2014-03-26T00:15:36Z" finished-at="2014-03-26T00:15:36Z">
    <groups>
      <group name="positiveTests">
        <method signature="ThreeCheckerTest.expectGoodData(java.lang.Object, java.lang.Object)[pri:0, instance:ca.pmcgovern.ThreeCheckerTest@115dc34e]" name="expectGoodData" class="ca.pmcgovern.ThreeCheckerTest"/>
      </group> <!-- positiveTests -->
      <group name="negativeTests">
        <method signature="ThreeCheckerTest.checkNull()[pri:0, instance:ca.pmcgovern.ThreeCheckerTest@7a53f43e]" name="checkNull" class="ca.pmcgovern.ThreeCheckerTest"/>
        <method signature="ThreeCheckerTest.expectBadData(java.lang.Object, java.lang.Object)[pri:0, instance:ca.pmcgovern.ThreeCheckerTest@7a53f43e]" name="expectBadData" class="ca.pmcgovern.ThreeCheckerTest"/>
      </group> <!-- negativeTests -->
    </groups>
    <test name="check-positive" duration-ms="288" started-at="2014-03-26T00:15:36Z" finished-at="2014-03-26T00:15:36Z">
      <class name="ca.pmcgovern.ThreeCheckerTest">
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:ca.pmcgovern.ThreeCheckerTest@115dc34e]" name="setup" is-config="true" duration-ms="10" started-at="2014-03-25T20:15:36Z" finished-at="2014-03-25T20:15:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[target/test-classes/good-data.csv]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="expectGoodData(java.lang.Object, java.lang.Object)[pri:0, instance:ca.pmcgovern.ThreeCheckerTest@115dc34e]" name="expectGoodData" duration-ms="29" started-at="2014-03-25T20:15:36Z" data-provider="getParameters" finished-at="2014-03-25T20:15:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- expectGoodData -->
        <test-method status="PASS" signature="expectGoodData(java.lang.Object, java.lang.Object)[pri:0, instance:ca.pmcgovern.ThreeCheckerTest@115dc34e]" name="expectGoodData" duration-ms="0" started-at="2014-03-25T20:15:36Z" data-provider="getParameters" finished-at="2014-03-25T20:15:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[27]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- expectGoodData -->
        <test-method status="PASS" signature="expectGoodData(java.lang.Object, java.lang.Object)[pri:0, instance:ca.pmcgovern.ThreeCheckerTest@115dc34e]" name="expectGoodData" duration-ms="0" started-at="2014-03-25T20:15:36Z" data-provider="getParameters" finished-at="2014-03-25T20:15:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- expectGoodData -->
        <test-method status="PASS" signature="expectGoodData(java.lang.Object, java.lang.Object)[pri:0, instance:ca.pmcgovern.ThreeCheckerTest@115dc34e]" name="expectGoodData" duration-ms="0" started-at="2014-03-25T20:15:36Z" data-provider="getParameters" finished-at="2014-03-25T20:15:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- expectGoodData -->
      </class> <!-- ca.pmcgovern.ThreeCheckerTest -->
    </test> <!-- check-positive -->
    <test name="check-negative" duration-ms="12" started-at="2014-03-26T00:15:36Z" finished-at="2014-03-26T00:15:36Z">
      <class name="ca.pmcgovern.ThreeCheckerTest">
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:ca.pmcgovern.ThreeCheckerTest@7a53f43e]" name="setup" is-config="true" duration-ms="1" started-at="2014-03-25T20:15:36Z" finished-at="2014-03-25T20:15:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[target/test-classes/bad-data.csv]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkNull()[pri:0, instance:ca.pmcgovern.ThreeCheckerTest@7a53f43e]" name="checkNull" duration-ms="6" started-at="2014-03-25T20:15:36Z" finished-at="2014-03-25T20:15:36Z">
          <exception class="org.codehaus.groovy.runtime.powerassert.PowerAssertionError">
            <message>
              <![CDATA[assert num
       |
       null]]>
            </message>
            <full-stacktrace>
              <![CDATA[Assertion failed: 

assert num
       |
       null

	at org.codehaus.groovy.runtime.InvokerHelper.assertFailed(InvokerHelper.java:399)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.assertFailed(ScriptBytecodeAdapter.java:655)
	at ca.pmcgovern.ThreeChecker.isProductOfThree(ThreeChecker.groovy:7)
	at ca.pmcgovern.ThreeChecker$isProductOfThree.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:120)
	at ca.pmcgovern.ThreeCheckerTest.checkNull(ThreeCheckerTest.groovy:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:217)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:92)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.codehaus.groovy.runtime.powerassert.PowerAssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNull -->
        <test-method status="PASS" signature="expectBadData(java.lang.Object, java.lang.Object)[pri:0, instance:ca.pmcgovern.ThreeCheckerTest@7a53f43e]" name="expectBadData" duration-ms="1" started-at="2014-03-25T20:15:36Z" data-provider="getParameters" finished-at="2014-03-25T20:15:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- expectBadData -->
        <test-method status="PASS" signature="expectBadData(java.lang.Object, java.lang.Object)[pri:0, instance:ca.pmcgovern.ThreeCheckerTest@7a53f43e]" name="expectBadData" duration-ms="0" started-at="2014-03-25T20:15:36Z" data-provider="getParameters" finished-at="2014-03-25T20:15:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- expectBadData -->
        <test-method status="PASS" signature="expectBadData(java.lang.Object, java.lang.Object)[pri:0, instance:ca.pmcgovern.ThreeCheckerTest@7a53f43e]" name="expectBadData" duration-ms="0" started-at="2014-03-25T20:15:36Z" data-provider="getParameters" finished-at="2014-03-25T20:15:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[44]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- expectBadData -->
        <test-method status="PASS" signature="expectBadData(java.lang.Object, java.lang.Object)[pri:0, instance:ca.pmcgovern.ThreeCheckerTest@7a53f43e]" name="expectBadData" duration-ms="1" started-at="2014-03-25T20:15:36Z" data-provider="getParameters" finished-at="2014-03-25T20:15:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- expectBadData -->
      </class> <!-- ca.pmcgovern.ThreeCheckerTest -->
    </test> <!-- check-negative -->
  </suite> <!-- GroovyExamplee -->
</testng-results>
